#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
language=$YNH_APP_ARG_LANGUAGE

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=language --value=$language

ynh_app_setting_set --app=$app --key=api_secret --value="$(ynh_string_random --length=32)"
ynh_app_setting_set --app=$app --key=app_key --value="$(ynh_string_random --length=32)"
ynh_app_setting_set --app=$app --key=phantomjs_key --value="$(ynh_string_random --length=32)"

ynh_app_setting_set --app=$app --key=email --value="$(ynh_user_get_info $admin mail)"
ynh_app_setting_set --app=$app --key=email__name --value="$(ynh_user_get_info $admin firstname) $(ynh_user_get_info $admin lastname)"

#=================================================
# STANDARD MODIFICATIONS
#=================================================

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Modifying a config file..."

ynh_add_config --template="../conf/default.env" --destination="$final_path/.env"

#=================================================
# BUILD THE APPLICATION
#=================================================
ynh_script_progression --message="Building the application..."

pushd "$final_path"
	# Run the database migrations and initially fill the db
	php$phpversion artisan optimize --no-interaction --verbose
	php$phpversion artisan migrate:fresh --seed --no-interaction --verbose --force
popd

# ynh_app_setting_set --app=$app --key=unprotected_uris --value='/'

# first_name="$(ynh_app_setting_get --app=$app --key=mail_from_name) | cut -d ' ' -f 1"
# last_name="$(ynh_app_setting_get --app=$app --key=mail_from_name) | cut -d ' ' -f 2"
# mail_from_address="$(ynh_user_get_info $admin mail)"

# curl --silent --show-error --insecure --location -H "Content-Type:application/json" --header "Host: $domain" --header "X-Requested-With: XMLHttpRequest" --resolve $domain:443:127.0.0.1 --data "{\"report_errors\":true,\"email\":\"$mail_from_address\",\"password\":\"insecurechangeme\",\"first_name\":\"$first_name\",\"last_name\":\"$last_name\",\"terms_of_service\":\"1\",\"privacy_policy\":\"1\"}" 'https://localhost/api/v1/signup?first_load=true' --cookie-jar /tmp/ynh--cookie.txt --cookie /tmp/ynh--cookie.txt 

#=================================================
# ADD A CRON JOB
#=================================================
ynh_script_progression --message="Adding a cron job..."

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
